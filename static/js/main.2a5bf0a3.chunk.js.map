{"version":3,"sources":["components/form/form.js","components/stats/stats.js","components/graph/graph.js","App.js","index.js"],"names":["SearchForm","props","onSubmit","getWeather","className","type","placeholder","name","onChange","handleChange","value","data","Stats","weatherData","city","temperature","humidity","wind","conditions","Graph","style","marginBottom","width","limit","height","fill","fillOpacity","color","strokeWidth","opacity","API_KEY","App","useState","setWeatherData","forecastData","setForecastData","noCity","setNoCity","enterCity","setEnterCity","setCity","e","a","preventDefault","fetch","call_Weather","json","parsedWeatherData","call_Forecat","parsedForecastData","cod","message","temp","list","map","main","unit","hum","country","sys","Math","ceil","speed","weather","description","target","item","i","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a5bf0a3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./form.scss\";\r\n\r\nconst SearchForm = props => {\r\n  return (\r\n    <form onSubmit={props.getWeather} className=\"search__form\">\r\n      <input\r\n        className=\"form__input-city\"\r\n        type=\"text\"\r\n        placeholder=\"City...\"\r\n        name=\"city\"\r\n        onChange={props.handleChange}\r\n        value={props.data}\r\n      />\r\n      <button className=\"search__weather-btn\">Search weather</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\n\r\nimport \"./stats.scss\";\r\n\r\nconst Stats = props => {\r\n  return (\r\n    <section className=\"stats\">\r\n      <div className=\"stats__left\">\r\n        {props.weatherData.city && (\r\n          <p className=\"stats__city\"> {props.weatherData.city}</p>\r\n        )}\r\n        {props.weatherData.temperature && (\r\n          <p className=\"stats__degrees\">{props.weatherData.temperature}¬∞c</p>\r\n        )}\r\n      </div>\r\n      <div className=\"stats__right\">\r\n        {props.weatherData.humidity && (\r\n          <p>\r\n            <span>Humidity:</span> {props.weatherData.humidity}%\r\n          </p>\r\n        )}\r\n        {props.weatherData.wind && (\r\n          <p>\r\n            <span>Wind speed:</span> {props.weatherData.wind} m/s\r\n          </p>\r\n        )}\r\n        {props.weatherData.conditions && (\r\n          <p className=\"stats__right-conditions\">\r\n            {\" \"}\r\n            {props.weatherData.conditions}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport {\r\n  SparklinesBars,\r\n  Sparklines,\r\n  SparklinesLine,\r\n  SparklinesReferenceLine\r\n} from \"react-sparklines\";\r\n\r\nimport \"./graph.scss\";\r\n\r\nconst Graph = props => {\r\n  return (\r\n    <div style={{ marginBottom: \".5rem\" }}>\r\n      <Sparklines\r\n        data={props.data}\r\n        width={500}\r\n        limit={40}\r\n        height={40}\r\n        style={{ width: \"275px\", height: \"110px\" }}\r\n      >\r\n        <SparklinesBars style={{ fill: \"blue\", fillOpacity: \".25\" }} />\r\n        <SparklinesLine\r\n          color=\"#ffffff\"\r\n          style={{ strokeWidth: 0.5, opacity: \".5\" }}\r\n        />\r\n        <SparklinesReferenceLine />\r\n      </Sparklines>\r\n      {props.data && <p className=\"graph__name\">{props.name}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React, { useState } from \"react\";\n\nimport SearchForm from \"./components/form/\";\nimport Stats from \"./components/stats/\";\nimport Graph from \"./components/graph\";\n\nimport \"./app.scss\";\n\nconst API_KEY = \"2915ce5b8d2735204f8a2d49c9510b33\";\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState({});\n  const [forecastData, setForecastData] = useState([]);\n  const [noCity, setNoCity] = useState(\"\");\n  const [enterCity, setEnterCity] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n\n  const handleInput = ({ target }) => {\n    setCity(target.value);\n  };\n\n  const getWeather = async e => {\n    e.preventDefault();\n\n    if (city) {\n      setNoCity(\"\");\n      const call_Weather = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n      );\n      const parsedWeatherData = await call_Weather.json();\n\n      const call_Forecat = await fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`\n      );\n      const parsedForecastData = await call_Forecat.json();\n\n      if (parsedWeatherData.cod === \"404\") {\n        setNoCity(`${parsedWeatherData.message}`);\n        setEnterCity(\"\");\n        setWeatherData({});\n        setForecastData([]);\n        setCity(\"\");\n      } else {\n        setEnterCity(\"\");\n        const temp = parsedForecastData.list.map(temp => {\n          return temp.main.temp;\n        });\n        temp.unit = \"¬∞C\";\n        const hum = parsedForecastData.list.map(hum => {\n          return hum.main.humidity;\n        });\n        hum.unit = \"%\";\n        setWeatherData({\n          city: parsedWeatherData.name,\n          country: parsedWeatherData.sys.country,\n          temperature: Math.ceil(parsedWeatherData.main.temp),\n          humidity: parsedWeatherData.main.humidity,\n          wind: parsedWeatherData.wind.speed,\n          conditions: parsedWeatherData.weather[0].description\n        });\n        setForecastData([temp, hum]);\n\n        setCity(\"\");\n      }\n    } else {\n      setEnterCity(\"Type the name of a city\");\n      setWeatherData({});\n      setForecastData([]);\n      setNoCity(\"\");\n    }\n  };\n  return (\n    <section className=\"app__wrapper\">\n      <SearchForm\n        getWeather={getWeather}\n        data={city}\n        handleChange={handleInput}\n      />\n      {enterCity && <p className=\"enter__city\">{enterCity}</p>}\n      {noCity && <p className=\"no__city\">City not found üåç</p>}\n      <Stats weatherData={weatherData} />\n      <section className=\"graphs\">\n        {weatherData.city && (\n          <h1 className=\"forecast__title\">5 days Forecast</h1>\n        )}\n        {forecastData.map((item, i) => {\n          return <Graph data={item} key={i} name={item.unit} />;\n        })}\n      </section>\n    </section>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}