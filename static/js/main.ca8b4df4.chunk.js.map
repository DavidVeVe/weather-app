{"version":3,"sources":["components/form/form.js","components/stats/stats.js","components/graph/graph.js","App.js","index.js"],"names":["SearchForm","props","onSubmit","getWeather","className","type","placeholder","name","onChange","handleChange","value","data","city","Stats","weatherData","temperature","humidity","wind","conditions","Graph","width","limit","height","style","fill","fillOpacity","color","strokeWidth","opacity","API_KEY","App","useState","setWeatherData","forecastData","setForecastData","inputData","setInputData","getForecast","a","fetch","call_api","json","parsedData","temp","list","map","main","hum","e","preventDefault","country","sys","speed","weather","description","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca8b4df4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./form.scss\";\r\n\r\nconst SearchForm = props => {\r\n  return (\r\n    <form onSubmit={props.getWeather} className=\"search__form\">\r\n      <input\r\n        className=\"form__input-city\"\r\n        type=\"text\"\r\n        placeholder=\"City...\"\r\n        name=\"city\"\r\n        onChange={props.handleChange}\r\n        value={props.data.city}\r\n      />\r\n      <button className=\"search__weather-btn\">Search weather</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\n\r\nimport \"./stats.scss\";\r\n\r\nconst Stats = props => {\r\n  return (\r\n    <section className=\"stats\">\r\n      <div className=\"stats__left\">\r\n        {props.weatherData.city && (\r\n          <p className=\"stats__city\"> {props.weatherData.city}</p>\r\n        )}\r\n        {props.weatherData.temperature && (\r\n          <p className=\"stats__degrees\">{props.weatherData.temperature}°c</p>\r\n        )}\r\n      </div>\r\n      <div className=\"stats__right\">\r\n        {props.weatherData.humidity && (\r\n          <p>\r\n            <span>Humidity:</span> {props.weatherData.humidity}%\r\n          </p>\r\n        )}\r\n        {props.weatherData.wind && (\r\n          <p>\r\n            <span>Wind speed:</span> {props.weatherData.wind} m/s\r\n          </p>\r\n        )}\r\n        {props.weatherData.conditions && (\r\n          <p className=\"stats__right-conditions\">\r\n            {\" \"}\r\n            {props.weatherData.conditions}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport {\r\n  SparklinesBars,\r\n  Sparklines,\r\n  SparklinesLine,\r\n  SparklinesReferenceLine\r\n} from \"react-sparklines\";\r\n\r\nimport \"./graph.scss\";\r\n\r\nconst Graph = props => {\r\n  return (\r\n    <div>\r\n      <Sparklines\r\n        data={props.data}\r\n        width={500}\r\n        limit={40}\r\n        height={40}\r\n        style={{ width: \"300px\", height: \"125px\" }}\r\n      >\r\n        <SparklinesBars style={{ fill: \"blue\", fillOpacity: \".25\" }} />\r\n        <SparklinesLine\r\n          color=\"#ffffff\"\r\n          style={{ strokeWidth: 0.5, opacity: \".5\" }}\r\n        />\r\n        <SparklinesReferenceLine />\r\n      </Sparklines>\r\n      {props.data && <p className=\"graph__name\">{props.name}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import React, { useState } from \"react\";\n\nimport SearchForm from \"./components/form/\";\nimport Stats from \"./components/stats/\";\nimport Graph from \"./components/graph\";\n\nimport \"./app.scss\";\n\nconst API_KEY = \"2915ce5b8d2735204f8a2d49c9510b33\";\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState({});\n  const [forecastData, setForecastData] = useState({});\n  const [inputData, setInputData] = useState({\n    city: \"\"\n  });\n\n  const handleInputChange = ({ target }) => {\n    setInputData({ [target.name]: target.value });\n  };\n\n  const getForecast = async () => {\n    const call_api = await fetch(\n      `http://api.openweathermap.org/data/2.5/forecast?q=${inputData.city}&appid=${API_KEY}&units=metric`\n    );\n    const parsedData = await call_api.json();\n    setForecastData({\n      temp: parsedData.list.map(temp => {\n        return temp.main.temp;\n      }),\n      humidity: parsedData.list.map(hum => {\n        return hum.main.humidity;\n      })\n    });\n  };\n\n  const getWeather = async e => {\n    e.preventDefault();\n    const call_api = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${inputData.city}&appid=${API_KEY}&units=metric`\n    );\n    const parsedData = await call_api.json();\n    setWeatherData({\n      city: parsedData.name,\n      country: parsedData.sys.country,\n      temperature: parsedData.main.temp,\n      humidity: parsedData.main.humidity,\n      wind: parsedData.wind.speed,\n      conditions: parsedData.weather[0].description\n    });\n    getForecast();\n  };\n\n  return (\n    <section className=\"app__wrapper\">\n      <SearchForm\n        getWeather={getWeather}\n        data={inputData}\n        handleChange={handleInputChange}\n      />\n      <Stats weatherData={weatherData} />\n      <section className=\"graphs\">\n        {forecastData.temp && (\n          <h1 className=\"forecast__title\">5 days Forecast</h1>\n        )}\n        <Graph data={forecastData.temp} name=\"°C\" />\n        <Graph data={forecastData.humidity} name=\"%\" />\n      </section>\n    </section>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}